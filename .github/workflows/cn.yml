name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

  test:
    runs-on: ubuntu-latest
    name: Test
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run code duplication check
        run: npm run check-duplication

      - name: Run tests
        run: npm test
  
  migrate:
    runs-on: ubuntu-latest
    name: Migrate Database
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PostgreSQL client
        run: sudo apt-get install postgresql-client

      - name: Run Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run migrate

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Render
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Trigger Render Deployment
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "Triggering deployment to Render..."
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$RENDER_DEPLOY_HOOK" \
          -H "Content-Type: application/json" \
          -d '{}')
          BODY=$(echo "$RESPONSE" | sed '$d')
          STATUS=$(echo "$RESPONSE" | tail -n1)
          echo "Response Body: $BODY"
          echo "Status Code: $STATUS"
          if [ "$STATUS" -ne 200 ] && [ "$STATUS" -ne 201 ]; then
            echo "Error: Failed to trigger Render deployment."
            exit 1
          else
            echo "Success: Render deployment triggered successfully."
          fi
